package example.ch01;

public class Part02_Variable01 {
    public static void main(String[] args) {
        /**
         *  변수(Variable)란?
         *  변하는 수가 아니라 하나의 값을 저장할 수 있는 메모리 공간을 말하며, 램(RAM)을 의미합니다.
         *  물리적으로 보면 램은 여러 개의 칩으로 나누어져 있지만, 논리적으로는 하나의 연속된 저장공간인 것처럼 다룹니다.
         *  전체 메모리의 저장공간을 1byte단위로 나누고 각각의 저장 공간에 0부터 1,2,3,4 ... 와 같이 연속적인 번호를 붙이는데, 이것을 메모리 주소라고 합니다.
         *  원래는 메모리의 값을 저장하거나 읽을 때, 메모리 주소를 이용해야 하는데, 메모리 주소는 숫자라서 사람이 기억하기 힘들고 불편합니다.
         *  그래서 특정 메모리 영역에 이름을 붙이고 주소 대신에 이름을 이용해서 메모리에 값을 저장하고 읽을 수 있게 한 것이 바로 * 변수 *입니다.
         *  그리고 변수는 단 하나의 값만 저장할 수 있기 때문에 변수에 새로운 값을 저장하면 기존에 저장하던 값은 지워지고 새로 저장한 값만 남게 됩니다.
         *
         *  변수의 선언?
         *  선언 이유 : 값(data)을 저장할 공간을 마련하는 것입니다.
         *  선언 방법 : " 변수타입 변수이름; "
         *  ; : 변수를 선언하는 것도 하나의 자바 문장이기때문에 자바의 모든 문장 끝에 붙는 세미 콜론도 잊지말고 적어야 합니다. ;을 붙이기만 하면 변수의 선언문이 완성됩니다.
         *
         *  변수에 값 저장하기
         *  int age;    : 정수(int)타입의 변수 age를 선언하여 age라는 이름의 저장공간을 마련합니다.
         *  age = 25;   : 변수 age에 25를 저장하였습니다.
         *      =       : '=' 는 프로그래밍언어에서는 대입연산자로 불리우며, 등호가 아니라 대입입니다.
         *                대수학에서의 같다는 의미로 사용되지만 프로그래밍에서는 오른쪽의 값을 왼쪽에 저장하라는 의미로 사용됩니다.
         *  변수의 초기화 : 변수에 처음으로 값을 저장하는 것을 뜻하며 모든 변수들은 사용하기 전에 적절한 값으로 초기화 하는 것이 좋습니다.
         *                그래서 대부분 변수를 선언과 동시에 초기화 하는 것이 일반적입니다. ex) int x = 0; int y = 5;
         *                위의 예시처럼 변수의 타입이 같은 경우에는 ','를 이용해서 한줄에 여러 변수를 선언할 수 있습니다. ex) int x = 0, y = 5;
         *                메모리는 여러 프로그램이 함께 공유하는 자원이기 때문에 사용하기 전에 새로운 값을 저장함으로써 기존에 저장되어 있는 알 수 없는 값을 지우는 것이 바로 * 초기화 *입니다.
         *                변수의 종류에는 클래스 변수, 인스턴스 변수, 지역 변수가 있는데 다른 변수들과 달리 지역변수는 자동 초기화되지 않기때문에 값을 읽기전에 반드시 초기화 해주어야 합니다.
         *                그렇지 않으면 컴파일할때 에러가 발생합니다. 클래스/인스턴스 변수는 추후에 배울 것이고, 그전까지 우리가 주로 사용하게 될 변수는 지역변수이기때문에 반드시 초기화해주어야 합니다.
         *
         *  변수의 값 읽어오기
         *  1) 변수의 값이 필요한 곳에 변수의 이름을 적는다.
         *     아래의 코드를 통해 확인해봅시다.
         */
        int year = 0, age = 23;
        year = age + 2000; // year = 23 + 2000; : age라는 변수에 저장된 값인 23을 읽어와서 대체합니다. 그리고 연산이 끝난 값을 year 저장됩니다. 이처럼 대입연산은 제일 마지막에 수행됩니다.
        System.out.println("year : " + year);

        age = age + 1; // age = 23 + 1; : 변수에 저장된 값을 1 증가시키는 방법 <-> age = age - 1; : 변수에 저장된 값을 1 감소시키는 방법.
        System.out.println("age : " + age);

        /* 변수 x,y를 선언 및 초기화하여 사칙연산하는 예제 */
        int x = 4, y = 2;
        System.out.println(x + y);
        System.out.println(x - y);
        System.out.println(x * y);
        System.out.println(x / y);
    }
}
