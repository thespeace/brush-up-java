package example.ch01;

public class Part02_Variable06 {
    public static void main(String[] args){
        /**
         *    -오버플로우(Overflow)
         *      사전적으로 "넘쳐흐른다"는 뜻의 용어로, 표현가능한 범위를 넘는 것을 의미합니다.
         *      계수기(counter)로 예로 들자면 0001~9999까지 카운팅을 하다가 표현할 수 있는 최대 범위의 수인 9999숫자에서 카운팅을 할 때 최소값으로 넘어가는것을 오버플로우가 발생했다 말합니다.
         *
         *      [ 최대값 + 1 ] -> 최소값
         *      [ 최소값 - 1 ] -> 최대값
         *
         *      ex) 부호 없는 4자리의 10진수 : 9999(최대값) +1 -> 0000(최소값)
         *                         0000(최소값) -1 -> 9999(최대값)
         *          부호 없는 4자리의 2진수  : 1111(최대값) +1 -> 0000(최소값)
         *                         0000(최소값) -1 -> 1111(최대값)
         *
         *          부호 있는 정수( -8 ~ 7) : 7(최대값) + 1 -> -8(최소값)
         *                                 -8(최소값) -1 -> 7(최대값)
         */
        short sMin = -32768, sMax = 32767; //부호 있는 정수 : 2byte = 16bit=2의 16제곱 = 65536 = ~32768 ~ 32767
        char cMin = 0, cMax = 65535; //부호 없는 정수 : 2byte = 16bit=2의 16제곱 = 65536 = 0 ~ 65535

        System.out.println("sMin   = " + sMin);
        System.out.println("sMin-1 = " + (short)(sMin-1)); //short타입으로 형변환.
        System.out.println("===============");
        System.out.println("sMax   = " + sMax);
        System.out.println("sMax+1 = " + (short)(sMax+1));
        System.out.println("===============");
        System.out.println("cMin   = " + (int)cMin);
        System.out.println("cMin-1 = " + (int)--cMin); //증감연산자.
        System.out.println("===============");
        System.out.println("cMax   = " + (int)cMax);
        System.out.println("cMax+1 = " + (int)++cMax);
        System.out.println("===============");

        /**
         *  + 참고
         *      -10진수/2진수의 표현 범위.
         *          1. 10 진수의 표현 범위
         *              1) 한자리 : 0 ~ 9 = 0 ~ 10 -1
         *              2) 두자리 : 0 ~ 99 = 0 ~ 100 -1 = 0 ~ 10의 2제곱 - 1
         *              3) 세자리 : 0 ~ 999 = 0 ~ 1000 -1 = 0 ~ 10의 3제곱 - 1
         *              4) 네자리 : 0 ~ 9999 = 0 ~ 10000 -1 = 0 ~ 10의 4제곱 - 1
         *          2. 2 진수의 표현 범위
         *              1) 한자리 : 0 ~ 1 = 0 ~ 2 -1
         *              2) 두자리 : 0 ~ 3 = 0 ~ 4 -1 = 0 ~ 2의 2제곱 - 1
         *              3) 세자리 : 0 ~ 7 = 0 ~ 8 -1 = 0 ~ 2의 3제곱 - 1
         *              4) 네자리 : 0 ~ 15 = 0 ~ 16 -1 = 0 ~ 2의 4제곱 - 1
         *                  * 1을 빼는 이유는? 0이 포함되어 있어서.
         *
         *      -부호 있는/없는 정수의 표현범위의 차이점.
         *          short 타입과 char 타입을 예로 들자면, short타입은 부호비트가 있기때문에 음수를 표현할 수 있고, char 타입은 부호비트가 없기때문에 음수를 표현할 수 없다.
         *          때문에, 두 타입은 2byte 즉, 16bit의 범위의 수인 65536개의 정수를 표현할 수 있지만, short는 음수 반, 양수 반을 표현 할 수 있고, char타입은 65536개의 양수만 표현할 수 있다.
         */
    }
}
