package example.ch07;

public class Inheritance11 {
    public static void main(String[] args){
        /**
         *    - 다형성(polymorphism)                                   ** 중요, 다형성을 이해하지 못한다면 나아가 추상클래스, 인터페이스 등을 이해하기 힘들 수 있다. **
         *      여러 가지 형태를 가질 수 있는 능력.
         *      ** 조상 타입 참조 변수로 자손 타입 객체를 다루는 것. **
         */
        SmartTv s = new SmartTv(); // 조상타입의 멤버변수 뿐만아니라 자손타입의 멤버변수까지 합해서 모두 사용 가능하다.
        Tv      t = new SmartTv(); // 타입 불일치해도 객체 생성 가능, Tv라는 조상 타입을 t라는 조상 타입 참조 변수로 SmartTv라는 자손 타입 객체를 다루는 것을 "다형성"이라고 한다.
                                   // 대신 참조변수의 타입이 조상타입이기때문에 조상타입의 멤버변수만 사용가능하고, 자손타입의 멤버변수는 사용할 수 없다.( 전체 멤버변수(조상+자손) 중 조상타입의 멤버변수만 사용 가능)


        //자손 타입의 참조변수로 조상 타입의 객체를 가리킬 수 없다.
        Tv      t1 = new SmartTv(); // OK, 허용.
        //SmartTv s2 = new Tv(); // Error, 허용 안됨. 멤버변수가 더 많은 자손타입을 참조변수 타입으로 정하고 조상의 객체를 생성하는 것은 자손타입의 멤버변수를 조상타입이 가지고 있지 않기 때문에 에러.

        /**
         *    Q.참조변수의 타입은 인스턴스의 타입과 반드시 일치해야 하나요?
         *    A.아닙니다. 일치하는 것이 보통이지만 일치 하지 않을 수도 있습니다. 이를 "다형성"이라고 할 수도 있습니다.
         *
         *    Q.참조변수가 조상타입일 때와 자손타입일 때의 차이는?
         *    A.참조변수로 사용할 수 있는 멤버의 갯수가 달라집니다. 조상타입을 참조변수 타입으로 객체를 생성할 경우 자손타입의 멤버변수를 사용하지 못합니다.
         *
         *    Q.자손 타입의 참조변수로 조상 타입의 객체를 가리킬 수 있나요?
         *    A.아니요. 허용되지 않습니다.
         */
    }
}
