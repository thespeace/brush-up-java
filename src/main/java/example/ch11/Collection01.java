package example.ch11;

import java.util.Calendar;

public class Collection01 {
    public static void main(String[] args){
        /**
         *    - 컬렉션 프레임워크(collections framework).
         *      다수의 데이터를 쉽고 효과적으로 처리할 수 있는 표준화된 방법을 제공하는 클래스의 집합을 의미합니다.
         *      ** 객체 지향 개념 다음으로 중요, 전체적으로 빠르게 여러번 반복하여 실습하는게 중요하다.
         *         어떻게, 언제쓰는지에 중점을 두다보면 원리도 보이는데 처음부터 이론중심으로 다가가면 어려울 수 있다. **
         *
         *      컬렉션(collection) : 여러 객체(데이터)를 모아 놓은 것을 의미.
         *
         *      프레임워크(framework) : 표준화, 정형화된 체계적인 프로그래밍 방식. 라이브러리 + 프로그래밍 방식.(자유도가 떨어지지만 프로그래밍 생산성 증가, 유지보수가 수월해진다.)
         *                            + 라이브러리(library) : 프로그래밍에서는 다른 사람들이 미리 유용한 기능을 만들어 모아 놓은 것을 의미. ex) 통계, 그래픽, 오디오 라이브러리, 자바API(DecimalFormat ...) 등등
         *
         *      컬렉션 프레임워크(collections framework) : 컬렉션(다수의 객체)을 다루기 위한 표준화된 프로그래밍 방식.
         *                                              컬렉션을 쉽고 편리하게 다룰 수 있는 다양한 클래스를 제공.(저장, 삭제, 검색, 정렬 ...)
         *                                              java.util패키지에 포함. JDK1.2부터 제공. <-> 이전에도 존재했지만 표준화 X.
         *
         *      컬렉션 클래스(collections class) : 다수의 데이터를 저장할 수 있는 클래스(예, Vector, ArrayList, HashSet)
         *
         *
         *
         *    - 컬렉션 프레임워크의 핵심 인터페이스.
         *
         *      1. List
         *          1) 순서(저장)가 있는 데이터의 집합, 데이터의 중복을 허용한다. ex) 대기자 명단(Waiting List).
         *          2) 구현 클래스 : ArrayList, LinkedList, Stack, Vector 등
         *
         *      2. Set
         *          1) 순서를 유지하지 않는 데이터의 집합. 데이터의 중복을 허용하지 않는다. ex) 양의 정수집합, 소수의 집합, 4발 동물의 집합(순서 중요치 않다.)
         *          2) 구현 클래스 : HashSet, TreeSet 등
         *          3) List와 완전히 반대의 성격을 가지고 있다. Set은 이름에서 알 수 있듯이 "집합"을 의미한다.
         *
         *      3. Map
         *          1) 키(key)와 값(value)의 쌍(pair)으로 이루어진 데이터의 집합,
         *             순서는 유지되지 않으며, 키는 중복을 허용하지 않고, 값은 중복을 허용한다.
         *             예) 우편번호, 지역번호(02-서울, 031-경기 ...)
         *          2) 구현 클래스 : HashMap, TreeMap, Hashtable, Properties 등
         *
         *          + 표준화를 진행하면, 이름을 통일을 시켰다. 구현 클래스에 인터페이스의 이름이 들어갔다.
         *          + List, Set은 공통부분(단일 값만 저장)을 뽑아서 Collection이라는 인터페이스로 정의를 했다. <-> Map은 (key, value)값을 한쌍으로 저장.
         */
    }
}
